// Generated by CoffeeScript 1.6.3
/*
  Module dependencies.
*/


(function() {
  var app, express, http, io, path, room, routes, server, socketio, user;

  express = require('express');

  routes = require('./routes');

  user = require('./routes/user');

  http = require('http');

  path = require('path');

  socketio = require('socket.io');

  app = express();

  app.set('port', process.env.PORT || 3000);

  app.set('views', path.join(__dirname, 'views'));

  app.set('view engine', 'ejs');

  app.use(express.favicon(__dirname + '/public/images/favicon.ico'));

  app.use(express.logger('dev'));

  app.use(express.bodyParser());

  app.use(express.methodOverride());

  app.use(express.cookieParser('your secret here'));

  app.use(express.session());

  app.use(app.router);

  app.use(require('stylus').middleware(path.join(__dirname, 'public')));

  app.use(express["static"](path.join(__dirname, 'public')));

  if ('development' === app.get('env')) {
    app.use(express.errorHandler());
  }

  app.get('/', routes.index.index);

  app.post('/', routes.index.login);

  server = http.createServer(app);

  io = socketio.listen(server);

  server.listen(app.get('port'), function() {
    return console.log('Express server listening on port ' + app.get('port'));
  });

  room = io.sockets.on('connection', function(socket) {
    var _this = this;
    socket.on('login', function(identify) {
      socket.join(identify.room);
      return socket.broadcast.to(identify.room).emit('news', {
        'news': identify.name + " checkin room. "
      });
    });
    socket.on('update', function(data) {
      return socket.broadcast.to(data.identify.room).emit('update', data);
    });
    socket.on('delete', function(data) {
      return socket.broadcast.to(data.identify.room).emit('delete', data);
    });
    return socket.on('move', function(data) {
      return socket.broadcast.to(data.identify.room).emit('move', data);
    });
  });

}).call(this);
